
import express, { Request, Response, NextFunction } from 'express'
import cors from 'cors'
import bodyParser from 'body-parser'
import { Stripe } from 'stripe'
import {v4 as uuidv4} from 'uuid'

const stripe = new Stripe('sk_test_51KNw3iJ01e0WgtoSUpl6lYbZEM5A8FgaEUlWCJnplbmQXZDwuZFdwL2TFkS8zQHcKBMmMu2Helds6sMas7HBUqsl00C0E0rkKz',  {
    apiVersion: '2020-08-27',
  })

 const app = express()
 app.use(cors())
 app.use(bodyParser.json())

interface Product {
    description: string,
    amount: number
}

app.post('/payment', async (req: Request, res: Response, next: NextFunction) => {

    const { email,product,address,name,phone, authToken } = req.body;
    const { token } = authToken;
    const { card } = token;

    console.log(card);



    console.log("============================================== payment initiate =======================")


    const userProduct = product as Product;

    // unique ID generated by client
     const idempotencyKey = uuidv4()

     try {
         const customer = await stripe.customers.create({
             email: email,
             phone: phone,
             name: name,
             address: {
                line1: address.firstLineAddress,
                line2: address.secondLineAddress,
                city:  address.city,
                postal_code: address.postcode,
                country: address.country,
                state: '',
              },
             source: token.id,
         })

         console.log('Customer Created.....')
         console.log(customer)

         const response = await stripe.charges.create({
             amount: userProduct.amount * 100,
             currency: 'HKD',
             customer: customer.id,
             receipt_email: email,
             description: userProduct.description,
             shipping: {
                 name: name,
                 address: {
                    line1: address.firstLineAddress,
                    line2: address.secondLineAddress,
                    city:  address.city,
                    postal_code: address.postcode,
                    country: address.country,
                    state: '',
                  },
                  phone: phone,
             }

         },{ idempotencyKey: idempotencyKey})

         console.log("charge response")
         console.log(response)



         res.json(response)

     } catch (err) {
         console.log("=========================================== error ==========================")
        console.log(err)
        res.json(err)
     }

})

app.use('/', (req, res, next) => {

    res.json('Thank you...')
})


app.listen(8001, () => {

    console.log('Listening to port 8001')
})

